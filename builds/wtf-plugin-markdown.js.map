{"version":3,"file":"wtf-plugin-markdown.js","sources":["../src/01-doc.js","../src/02-section.js","../src/03-paragraph.js","../src/_lib/smartReplace.js","../src/04-sentence.js","../src/infobox/_skip-keys.js","../src/_lib/pad.js","../src/infobox/index.js","../src/image.js","../src/index.js"],"sourcesContent":["const defaults = {\n  redirects: true,\n  infoboxes: true,\n  templates: true,\n  sections: true\n}\n// we should try to make this look like the wikipedia does, i guess.\nconst softRedirect = function(doc) {\n  let link = doc.redirectTo()\n  let href = link.page\n  href = './' + href.replace(/ /g, '_')\n  if (link.anchor) {\n    href += '#' + link.anchor\n  }\n  return `â†³ [${link.text}](${href})`\n}\n\n//turn a Doc object into a markdown string\nconst toMarkdown = function(options) {\n  options = Object.assign({}, defaults, options)\n  let data = this.data\n  let md = ''\n  //if it's a redirect page, give it a 'soft landing':\n  if (options.redirects === true && this.isRedirect() === true) {\n    return softRedirect(this) //end it here\n  }\n  //render infoboxes (up at the top)\n  if (options.infoboxes === true && options.templates === true) {\n    md += this.infoboxes()\n      .map(infobox => infobox.markdown(options))\n      .join('\\n\\n')\n  }\n  //render each section\n  if (options.sections === true || options.paragraphs === true || options.sentences === true) {\n    md += data.sections.map(s => s.markdown(options)).join('\\n\\n')\n  }\n  //default false\n  if (options.citations === true) {\n    md += '## References'\n    md += this.citations()\n      .map(c => c.json(options))\n      .join('\\n')\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","const defaults = {\n  headers: true,\n  images: true,\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\n\nconst doSection = function(options) {\n  options = Object.assign({}, defaults, options)\n  let md = ''\n  //make the header\n  if (options.headers === true && this.title()) {\n    let header = '##'\n    for (let i = 0; i < this.depth; i += 1) {\n      header += '#'\n    }\n    md += header + ' ' + this.title() + '\\n'\n  }\n  //put any images under the header\n  if (options.images === true) {\n    let images = this.images()\n    if (images.length > 0) {\n      md += images.map(img => img.markdown()).join('\\n')\n      md += '\\n'\n    }\n  }\n  //make a mardown table\n  if (options.tables === true) {\n    let tables = this.tables()\n    if (tables.length > 0) {\n      md += '\\n'\n      md += tables.map(table => table.markdown(options)).join('\\n')\n      md += '\\n'\n    }\n  }\n  //make a mardown bullet-list\n  if (options.lists === true) {\n    let lists = this.lists()\n    if (lists.length > 0) {\n      md += lists.map(list => list.markdown(options)).join('\\n')\n      md += '\\n'\n    }\n  }\n  //finally, write the sentence text.\n  if (options.paragraphs === true || options.sentences === true) {\n    md += this.paragraphs()\n      .map(p => {\n        return p\n          .sentences()\n          .map(s => s.markdown(options))\n          .join(' ')\n      })\n      .join('\\n\\n')\n  }\n  return md\n}\nmodule.exports = doSection\n","const defaults = {\n  sentences: true\n}\n\nconst toMarkdown = function(options) {\n  options = Object.assign({}, defaults, options)\n  let md = ''\n  if (options.sentences === true) {\n    md += this.sentences().reduce((str, s) => {\n      str += s.markdown(options) + '\\n'\n      return str\n    }, {})\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","//escape a string like 'fun*2.Co' for a regExpr\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\n}\n\n//sometimes text-replacements can be ambiguous - words used multiple times..\nconst smartReplace = function(all, text, result) {\n  if (!text || !all) {\n    return all\n  }\n\n  if (typeof all === 'number') {\n    all = String(all)\n  }\n  text = escapeRegExp(text)\n  //try a word-boundary replace\n  let reg = new RegExp('\\\\b' + text + '\\\\b')\n  if (reg.test(all) === true) {\n    all = all.replace(reg, result)\n  } else {\n    //otherwise, fall-back to a much messier, dangerous replacement\n    // console.warn('missing \\'' + text + '\\'');\n    all = all.replace(text, result)\n  }\n  return all\n}\n\nmodule.exports = smartReplace\n","const smartReplace = require('./_lib/smartReplace')\n\nconst defaults = {\n  links: true,\n  formatting: true\n}\n\n//create links, bold, italic in markdown\nconst toMarkdown = function(options) {\n  options = Object.assign({}, defaults, options)\n  let md = this.text()\n  //turn links back into links\n  if (options.links === true) {\n    this.links().forEach(link => {\n      let mdLink = link.markdown()\n      let str = link.text || link.page\n      md = smartReplace(md, str, mdLink)\n    })\n  }\n  //turn bolds into **bold**\n  if (options.formatting === true) {\n    this.bold().forEach(b => {\n      md = smartReplace(md, b, '**' + b + '**')\n    })\n    //support *italics*\n    this.italic().forEach(i => {\n      md = smartReplace(md, i, '*' + i + '*')\n    })\n  }\n  return md\n}\nmodule.exports = toMarkdown\n","module.exports = {\n  image: true,\n  caption: true,\n  alt: true,\n  signature: true,\n  'signature alt': true\n}\n","//center-pad each cell, to make the table more legible\nconst pad = (str, cellWidth) => {\n  str = str || ''\n  str = String(str)\n  cellWidth = cellWidth || 15\n  let diff = cellWidth - str.length\n  diff = Math.ceil(diff / 2)\n  for (let i = 0; i < diff; i += 1) {\n    str = ' ' + str\n    if (str.length < cellWidth) {\n      str = str + ' '\n    }\n  }\n  return str\n}\nmodule.exports = pad\n","const dontDo = require('./_skip-keys')\nconst defaults = {\n  images: true\n}\n\n//\nconst pad = require('../_lib/pad')\n\n// render an infobox as a table with two columns, key + value\nconst doInfobox = function(options) {\n  options = Object.assign({}, defaults, options)\n  let md = '|' + pad('', 35) + '|' + pad('', 30) + '|\\n'\n  md += '|' + pad('---', 35) + '|' + pad('---', 30) + '|\\n'\n  //todo: render top image here (somehow)\n  Object.keys(this.data).forEach(k => {\n    if (dontDo[k] === true) {\n      return\n    }\n    let key = '**' + k + '**'\n    let s = this.data[k]\n    let val = s.markdown(options)\n    //markdown is more newline-sensitive than wiki\n    val = val.split(/\\n/g).join(', ')\n    md += '|' + pad(key, 35) + '|' + pad(val, 30) + ' |\\n'\n  })\n  return md\n}\nmodule.exports = doInfobox\n","//markdown images are like this: ![alt text](href)\nconst toMarkdown = function() {\n  let alt = this.data.file.replace(/^(file|image):/i, '')\n  alt = alt.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '')\n  return '![' + alt + '](' + this.thumbnail() + ')'\n}\nmodule.exports = toMarkdown\n","const doc = require('./01-doc')\nconst section = require('./02-section')\nconst paragraph = require('./03-paragraph')\nconst sentence = require('./04-sentence')\n// const link = require('./05-link')\nconst infobox = require('./infobox')\nconst image = require('./image')\n\nconst plugin = function(models) {\n  models.Doc.markdown = doc\n  models.Section.markdown = section\n  models.Paragraph.markdown = paragraph\n  models.Sentence.markdown = sentence\n  models.Image.markdown = image\n  models.Infobox.markdown = infobox\n  // models.Link.markdown = link\n  // models.Template.markdown = function(opts) {}\n}\nmodule.exports = plugin\n"],"names":["defaults","redirects","infoboxes","templates","sections","softRedirect","doc","link","redirectTo","href","page","replace","anchor","text","toMarkdown","options","Object","assign","data","md","isRedirect","map","infobox","markdown","join","paragraphs","sentences","s","citations","c","json","headers","images","tables","lists","doSection","title","header","i","depth","length","img","table","list","p","reduce","str","escapeRegExp","smartReplace","all","result","String","reg","RegExp","test","links","formatting","forEach","mdLink","bold","b","italic","image","caption","alt","signature","pad","cellWidth","diff","Math","ceil","doInfobox","keys","k","dontDo","key","val","split","file","thumbnail","plugin","models","Doc","Section","section","Paragraph","paragraph","Sentence","sentence","Image","Infobox"],"mappings":"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"}